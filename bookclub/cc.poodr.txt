POODR
chapter 1

++Things That Sandi Says That I <3++
* "We want to do our best work, and we want the work w do to have meaning. And, all else being dqual, we prefer to enjoy ourselves along the way."
* "If you are a novice, start out by following these rules in blind faith if necessary.  This easly obedience will stave off disaster until you can gain enough experience to make your own decisions."
* "...optimism turns to despair as programmers begin to greet every change request with 'Yes, I can add that feature, but it will break everything."


++Stuff I Want to Remember++
* SOLID: Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion
* DRY: don't repeat yourself
* Law of Demeter(LoD)
* Gang of Four: Erich Gamma, Richard Helm, Ralph Johnson, Jon Vlissides
* object-oriented vs procedural programming
* object = data + behavior
* methods (def of behavior) vs attributes (def of variables)


++Behaviors++
* Object-oriented design is about managing dependencies. It is a set of coding techniques that arrange dependencies such that objects can tolderate change. In the absence of design, unmanaged dependencies wreak havoc because objects know too much about one another.  Changing one object forces change upon its collaborators, which in turn, forces change upon its collaborators, ad infinitum..."
* "Design is not an assembly line where similarly trained workers construct identifcal widgets; it's a studio where like-minded artists sculpt custom applications."
* "Practical design does not anticipate specific future requirements, it merely accepts that something will and that, in the present, you cannot know what. It doesn't guess the future; it preserves your options for accommodating the future.  It doesn't choose; it leaves you room to move."
* 

++Interesting...skepticism++
* The purpose of design is to allow you to do design later and its primary goal is to reduce the cost of change.
* When designing, there is a question of "how much to design" - consider: ROI
* "Design is a process of progressive discoverty that relies on a feedback loop...timely and incremental."
* "Whether this language ultimately brings you pleasure or gives you pain is a matter of design and the concern of this book."